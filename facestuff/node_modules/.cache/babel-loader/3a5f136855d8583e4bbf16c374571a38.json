{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nimport { registerKernel } from '@tensorflow/tfjs-core';\nimport { _fusedMatMulConfig } from './kernels/_FusedMatMul';\nimport { absConfig } from './kernels/Abs';\nimport { acosConfig } from './kernels/Acos';\nimport { acoshConfig } from './kernels/Acosh';\nimport { addConfig } from './kernels/Add';\nimport { asinConfig } from './kernels/Asin';\nimport { asinhConfig } from './kernels/Asinh';\nimport { atanConfig } from './kernels/Atan';\nimport { atanhConfig } from './kernels/Atanh';\nimport { avgPoolConfig } from './kernels/AvgPool';\nimport { avgPoolBackpropConfig } from './kernels/AvgPoolBackprop';\nimport { batchMatMulConfig } from './kernels/BatchMatMul';\nimport { batchNormConfig } from './kernels/BatchNorm';\nimport { castConfig } from './kernels/Cast';\nimport { ceilConfig } from './kernels/Ceil';\nimport { clipConfig } from './kernels/Clip';\nimport { complexConfig } from './kernels/Complex';\nimport { concatConfig } from './kernels/Concat';\nimport { conv2DConfig } from './kernels/Conv2D';\nimport { conv2DBackpropFilterConfig } from './kernels/Conv2DBackpropFilter';\nimport { conv2DBackpropInputConfig } from './kernels/Conv2DBackpropInput';\nimport { conv3DConfig } from './kernels/Conv3D';\nimport { conv3DBackpropFilterV2Config } from './kernels/Conv3DBackpropFilterV2';\nimport { conv3DBackpropInputV2Config } from './kernels/Conv3DBackpropInputV2';\nimport { cosConfig } from './kernels/Cos';\nimport { coshConfig } from './kernels/Cosh';\nimport { depthwiseConv2dNativeConfig } from './kernels/DepthwiseConv2dNative';\nimport { depthwiseConv2dNativeBackpropFilterConfig } from './kernels/DepthwiseConv2dNativeBackpropFilter';\nimport { depthwiseConv2dNativeBackpropInputConfig } from './kernels/DepthwiseConv2dNativeBackpropInput';\nimport { dilation2dConfig } from './kernels/Dilation2D';\nimport { dilation2dBackpropFilterConfig } from './kernels/Dilation2DBackpropFilter';\nimport { dilation2dBackpropInputConfig } from './kernels/Dilation2DBackpropInput';\nimport { divConfig } from './kernels/Div';\nimport { eluConfig } from './kernels/Elu';\nimport { erfConfig } from './kernels/Erf';\nimport { expConfig } from './kernels/Exp';\nimport { expm1Config } from './kernels/Expm1';\nimport { fftConfig } from './kernels/FFT';\nimport { fillConfig } from './kernels/Fill';\nimport { flipLeftRightConfig } from './kernels/FlipLeftRight';\nimport { floorConfig } from './kernels/Floor';\nimport { fusedConv2DConfig } from './kernels/FusedConv2D';\nimport { fusedDepthwiseConv2DConfig } from './kernels/FusedDepthwiseConv2D';\nimport { identityConfig } from './kernels/Identity';\nimport { ifftConfig } from './kernels/IFFT';\nimport { imagConfig } from './kernels/Imag';\nimport { isFiniteConfig } from './kernels/IsFinite';\nimport { isInfConfig } from './kernels/IsInf';\nimport { isNaNConfig } from './kernels/IsNaN';\nimport { logConfig } from './kernels/Log';\nimport { log1pConfig } from './kernels/Log1p';\nimport { logicalNotConfig } from './kernels/LogicalNot';\nimport { maxConfig } from './kernels/Max';\nimport { maxPoolConfig } from './kernels/MaxPool';\nimport { maxPoolBackpropConfig } from './kernels/MaxPoolBackprop';\nimport { maxPoolWithArgmaxConfig } from './kernels/MaxPoolWithArgmax';\nimport { mirrorPadConfig } from './kernels/MirrorPad';\nimport { multiplyConfig } from './kernels/Multiply';\nimport { nonMaxSuppressionV4Config } from './kernels/NonMaxSuppressionV4';\nimport { nonMaxSuppressionV5Config } from './kernels/NonMaxSuppressionV5';\nimport { notEqualConfig } from './kernels/NotEqual';\nimport { padV2Config } from './kernels/PadV2';\nimport { preluConfig } from './kernels/Prelu';\nimport { realConfig } from './kernels/Real';\nimport { reciprocalConfig } from './kernels/Reciprocal';\nimport { reluConfig } from './kernels/Relu';\nimport { relu6Config } from './kernels/Relu6';\nimport { reshapeConfig } from './kernels/Reshape';\nimport { rotateWithOffsetConfig } from './kernels/RotateWithOffset';\nimport { roundConfig } from './kernels/Round';\nimport { rsqrtConfig } from './kernels/Rsqrt';\nimport { seluConfig } from './kernels/Selu';\nimport { sigmoidConfig } from './kernels/Sigmoid';\nimport { signConfig } from './kernels/Sign';\nimport { sinConfig } from './kernels/Sin';\nimport { sinhConfig } from './kernels/Sinh';\nimport { sliceConfig } from './kernels/Slice';\nimport { softplusConfig } from './kernels/Softplus';\nimport { spaceToBatchNDConfig } from './kernels/SpaceToBatchND';\nimport { sqrtConfig } from './kernels/Sqrt';\nimport { squareConfig } from './kernels/Square';\nimport { squaredDifferenceConfig } from './kernels/SquaredDifference';\nimport { stepConfig } from './kernels/Step';\nimport { subConfig } from './kernels/Sub';\nimport { tanConfig } from './kernels/Tan';\nimport { tanhConfig } from './kernels/Tanh';\nimport { transposeConfig } from './kernels/Transpose';\nimport { uniqueConfig } from './kernels/Unique'; // List all kernel configs here\n\nconst kernelConfigs = [_fusedMatMulConfig, absConfig, acosConfig, acoshConfig, addConfig, asinConfig, asinhConfig, atanConfig, atanhConfig, avgPoolConfig, avgPoolBackpropConfig, batchMatMulConfig, batchNormConfig, castConfig, ceilConfig, clipConfig, complexConfig, concatConfig, conv2DBackpropFilterConfig, conv2DBackpropInputConfig, conv2DConfig, conv3DBackpropFilterV2Config, conv3DBackpropInputV2Config, conv3DConfig, cosConfig, coshConfig, depthwiseConv2dNativeConfig, depthwiseConv2dNativeBackpropFilterConfig, depthwiseConv2dNativeBackpropInputConfig, dilation2dConfig, dilation2dBackpropInputConfig, dilation2dBackpropFilterConfig, divConfig, eluConfig, erfConfig, expConfig, expm1Config, fftConfig, fillConfig, flipLeftRightConfig, floorConfig, fusedConv2DConfig, fusedDepthwiseConv2DConfig, identityConfig, ifftConfig, imagConfig, isFiniteConfig, isInfConfig, isNaNConfig, logConfig, log1pConfig, logicalNotConfig, maxPoolConfig, maxPoolBackpropConfig, maxPoolWithArgmaxConfig, maxConfig, mirrorPadConfig, multiplyConfig, nonMaxSuppressionV4Config, nonMaxSuppressionV5Config, notEqualConfig, padV2Config, preluConfig, realConfig, reciprocalConfig, reluConfig, relu6Config, reshapeConfig, rotateWithOffsetConfig, roundConfig, rsqrtConfig, seluConfig, sigmoidConfig, signConfig, sinConfig, sinhConfig, sliceConfig, softplusConfig, spaceToBatchNDConfig, sqrtConfig, squareConfig, squaredDifferenceConfig, stepConfig, subConfig, tanConfig, tanhConfig, transposeConfig, uniqueConfig];\n\nfor (const kernelConfig of kernelConfigs) {\n  registerKernel(kernelConfig);\n}","map":{"version":3,"sources":["../src/register_all_kernels.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nimport { registerKernel } from '@tensorflow/tfjs-core';\nimport { _fusedMatMulConfig } from './kernels/_FusedMatMul';\nimport { absConfig } from './kernels/Abs';\nimport { acosConfig } from './kernels/Acos';\nimport { acoshConfig } from './kernels/Acosh';\nimport { addConfig } from './kernels/Add';\nimport { asinConfig } from './kernels/Asin';\nimport { asinhConfig } from './kernels/Asinh';\nimport { atanConfig } from './kernels/Atan';\nimport { atanhConfig } from './kernels/Atanh';\nimport { avgPoolConfig } from './kernels/AvgPool';\nimport { avgPoolBackpropConfig } from './kernels/AvgPoolBackprop';\nimport { batchMatMulConfig } from './kernels/BatchMatMul';\nimport { batchNormConfig } from './kernels/BatchNorm';\nimport { castConfig } from './kernels/Cast';\nimport { ceilConfig } from './kernels/Ceil';\nimport { clipConfig } from './kernels/Clip';\nimport { complexConfig } from './kernels/Complex';\nimport { concatConfig } from './kernels/Concat';\nimport { conv2DConfig } from './kernels/Conv2D';\nimport { conv2DBackpropFilterConfig } from './kernels/Conv2DBackpropFilter';\nimport { conv2DBackpropInputConfig } from './kernels/Conv2DBackpropInput';\nimport { conv3DConfig } from './kernels/Conv3D';\nimport { conv3DBackpropFilterV2Config } from './kernels/Conv3DBackpropFilterV2';\nimport { conv3DBackpropInputV2Config } from './kernels/Conv3DBackpropInputV2';\nimport { cosConfig } from './kernels/Cos';\nimport { coshConfig } from './kernels/Cosh';\nimport { depthwiseConv2dNativeConfig } from './kernels/DepthwiseConv2dNative';\nimport { depthwiseConv2dNativeBackpropFilterConfig } from './kernels/DepthwiseConv2dNativeBackpropFilter';\nimport { depthwiseConv2dNativeBackpropInputConfig } from './kernels/DepthwiseConv2dNativeBackpropInput';\nimport { dilation2dConfig } from './kernels/Dilation2D';\nimport { dilation2dBackpropFilterConfig } from './kernels/Dilation2DBackpropFilter';\nimport { dilation2dBackpropInputConfig } from './kernels/Dilation2DBackpropInput';\nimport { divConfig } from './kernels/Div';\nimport { eluConfig } from './kernels/Elu';\nimport { erfConfig } from './kernels/Erf';\nimport { expConfig } from './kernels/Exp';\nimport { expm1Config } from './kernels/Expm1';\nimport { fftConfig } from './kernels/FFT';\nimport { fillConfig } from './kernels/Fill';\nimport { flipLeftRightConfig } from './kernels/FlipLeftRight';\nimport { floorConfig } from './kernels/Floor';\nimport { fusedConv2DConfig } from './kernels/FusedConv2D';\nimport { fusedDepthwiseConv2DConfig } from './kernels/FusedDepthwiseConv2D';\nimport { identityConfig } from './kernels/Identity';\nimport { ifftConfig } from './kernels/IFFT';\nimport { imagConfig } from './kernels/Imag';\nimport { isFiniteConfig } from './kernels/IsFinite';\nimport { isInfConfig } from './kernels/IsInf';\nimport { isNaNConfig } from './kernels/IsNaN';\nimport { logConfig } from './kernels/Log';\nimport { log1pConfig } from './kernels/Log1p';\nimport { logicalNotConfig } from './kernels/LogicalNot';\nimport { maxConfig } from './kernels/Max';\nimport { maxPoolConfig } from './kernels/MaxPool';\nimport { maxPoolBackpropConfig } from './kernels/MaxPoolBackprop';\nimport { maxPoolWithArgmaxConfig } from './kernels/MaxPoolWithArgmax';\nimport { mirrorPadConfig } from './kernels/MirrorPad';\nimport { multiplyConfig } from './kernels/Multiply';\nimport { nonMaxSuppressionV4Config } from './kernels/NonMaxSuppressionV4';\nimport { nonMaxSuppressionV5Config } from './kernels/NonMaxSuppressionV5';\nimport { notEqualConfig } from './kernels/NotEqual';\nimport { padV2Config } from './kernels/PadV2';\nimport { preluConfig } from './kernels/Prelu';\nimport { realConfig } from './kernels/Real';\nimport { reciprocalConfig } from './kernels/Reciprocal';\nimport { reluConfig } from './kernels/Relu';\nimport { relu6Config } from './kernels/Relu6';\nimport { reshapeConfig } from './kernels/Reshape';\nimport { rotateWithOffsetConfig } from './kernels/RotateWithOffset';\nimport { roundConfig } from './kernels/Round';\nimport { rsqrtConfig } from './kernels/Rsqrt';\nimport { seluConfig } from './kernels/Selu';\nimport { sigmoidConfig } from './kernels/Sigmoid';\nimport { signConfig } from './kernels/Sign';\nimport { sinConfig } from './kernels/Sin';\nimport { sinhConfig } from './kernels/Sinh';\nimport { sliceConfig } from './kernels/Slice';\nimport { softplusConfig } from './kernels/Softplus';\nimport { spaceToBatchNDConfig } from './kernels/SpaceToBatchND';\nimport { sqrtConfig } from './kernels/Sqrt';\nimport { squareConfig } from './kernels/Square';\nimport { squaredDifferenceConfig } from './kernels/SquaredDifference';\nimport { stepConfig } from './kernels/Step';\nimport { subConfig } from './kernels/Sub';\nimport { tanConfig } from './kernels/Tan';\nimport { tanhConfig } from './kernels/Tanh';\nimport { transposeConfig } from './kernels/Transpose';\nimport { uniqueConfig } from './kernels/Unique';\n// List all kernel configs here\nconst kernelConfigs = [\n    _fusedMatMulConfig,\n    absConfig,\n    acosConfig,\n    acoshConfig,\n    addConfig,\n    asinConfig,\n    asinhConfig,\n    atanConfig,\n    atanhConfig,\n    avgPoolConfig,\n    avgPoolBackpropConfig,\n    batchMatMulConfig,\n    batchNormConfig,\n    castConfig,\n    ceilConfig,\n    clipConfig,\n    complexConfig,\n    concatConfig,\n    conv2DBackpropFilterConfig,\n    conv2DBackpropInputConfig,\n    conv2DConfig,\n    conv3DBackpropFilterV2Config,\n    conv3DBackpropInputV2Config,\n    conv3DConfig,\n    cosConfig,\n    coshConfig,\n    depthwiseConv2dNativeConfig,\n    depthwiseConv2dNativeBackpropFilterConfig,\n    depthwiseConv2dNativeBackpropInputConfig,\n    dilation2dConfig,\n    dilation2dBackpropInputConfig,\n    dilation2dBackpropFilterConfig,\n    divConfig,\n    eluConfig,\n    erfConfig,\n    expConfig,\n    expm1Config,\n    fftConfig,\n    fillConfig,\n    flipLeftRightConfig,\n    floorConfig,\n    fusedConv2DConfig,\n    fusedDepthwiseConv2DConfig,\n    identityConfig,\n    ifftConfig,\n    imagConfig,\n    isFiniteConfig,\n    isInfConfig,\n    isNaNConfig,\n    logConfig,\n    log1pConfig,\n    logicalNotConfig,\n    maxPoolConfig,\n    maxPoolBackpropConfig,\n    maxPoolWithArgmaxConfig,\n    maxConfig,\n    mirrorPadConfig,\n    multiplyConfig,\n    nonMaxSuppressionV4Config,\n    nonMaxSuppressionV5Config,\n    notEqualConfig,\n    padV2Config,\n    preluConfig,\n    realConfig,\n    reciprocalConfig,\n    reluConfig,\n    relu6Config,\n    reshapeConfig,\n    rotateWithOffsetConfig,\n    roundConfig,\n    rsqrtConfig,\n    seluConfig,\n    sigmoidConfig,\n    signConfig,\n    sinConfig,\n    sinhConfig,\n    sliceConfig,\n    softplusConfig,\n    spaceToBatchNDConfig,\n    sqrtConfig,\n    squareConfig,\n    squaredDifferenceConfig,\n    stepConfig,\n    subConfig,\n    tanConfig,\n    tanhConfig,\n    transposeConfig,\n    uniqueConfig,\n];\nfor (const kernelConfig of kernelConfigs) {\n    registerKernel(kernelConfig);\n}\n//# sourceMappingURL=register_all_kernels.js.map"]},"metadata":{},"sourceType":"module"}
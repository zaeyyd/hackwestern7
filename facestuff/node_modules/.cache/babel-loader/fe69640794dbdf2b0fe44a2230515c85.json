{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/zayyedmansoor/Desktop/TECH/hackwestern7/facestuff/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport \"./App.css\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as facemesh from \"@tensorflow-models/facemesh\";\nimport Webcam from \"react-webcam\";\nimport { drawMesh } from \"./utilities\";\nimport Unity, { UnityContext } from \"react-unity-webgl\";\nconst unityContext = new UnityContext({\n  loaderUrl: \"/test2/build/testt.loader.js\",\n  dataUrl: \"/test2/build/testt.data\",\n  frameworkUrl: \"/test2/build/testt.framework.js.gz\",\n  codeUrl: \"/test2/build/testt.wasm.gz\"\n});\n\nfunction App() {\n  _s();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null); //  Load posenet\n\n  const runFacemesh = async () => {\n    const net = await facemesh.load({\n      inputResolution: {\n        width: 640,\n        height: 480\n      },\n      scale: 0.8\n    }); //\n\n    setInterval(() => {\n      detect(net);\n    }, 100);\n  };\n\n  const detect = async net => {\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight; // Set video width\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight; // Set canvas width\n\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight; // Make Detections\n\n      const face = await net.estimateFaces(video); // console.log(face[0].scaledMesh[187]);\n      // console.log(face[0].scaledMesh[127]);\n\n      try {\n        if (face[0].scaledMesh[187] < face[0].scaledMesh[127]) {\n          console.log(\"looking right\");\n        } else if (face[0].scaledMesh[411] > face[0].scaledMesh[356]) {\n          console.log(\"looking left\");\n        }\n      } catch {\n        console.log('checked blind spot');\n      } // Get canvas context\n\n\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawMesh(face, ctx);\n    }\n  };\n\n  runFacemesh();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Unity, {\n      unityContext: unityContext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"AwQWgsmsPhWgADiRou0jnDEtoH4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/zayyedmansoor/Desktop/TECH/hackwestern7/facestuff/src/App.js"],"names":["React","useRef","tf","facemesh","Webcam","drawMesh","Unity","UnityContext","unityContext","loaderUrl","dataUrl","frameworkUrl","codeUrl","App","webcamRef","canvasRef","runFacemesh","net","load","inputResolution","width","height","scale","setInterval","detect","current","video","readyState","videoWidth","videoHeight","face","estimateFaces","scaledMesh","console","log","ctx","getContext","position","marginLeft","marginRight","left","right","textAlign","zindex"],"mappings":"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","sourcesContent":["\n  \n\n\nimport React, { useRef } from \"react\";\nimport \"./App.css\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as facemesh from \"@tensorflow-models/facemesh\";\nimport Webcam from \"react-webcam\";\nimport { drawMesh } from \"./utilities\";\nimport Unity, { UnityContext } from \"react-unity-webgl\";\n\n\nconst unityContext = new UnityContext({\n\n  loaderUrl: \"/test2/build/testt.loader.js\",\n  dataUrl: \"/test2/build/testt.data\",\n  frameworkUrl: \"/test2/build/testt.framework.js.gz\",\n  codeUrl: \"/test2/build/testt.wasm.gz\",\n\n});\n\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  //  Load posenet\n  const runFacemesh = async () => {\n    const net = await facemesh.load({\n      inputResolution: { width: 640, height: 480 },\n      scale: 0.8,\n    });\n    //\n    setInterval(() => {\n      detect(net);\n    }, 100);\n  };\n\n  const detect = async (net) => {\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Make Detections\n      const face = await net.estimateFaces(video);\n      // console.log(face[0].scaledMesh[187]);\n      // console.log(face[0].scaledMesh[127]);\n\n      try{\n      if(face[0].scaledMesh[187] < face[0].scaledMesh[127]){\n        console.log(\"looking right\")\n      }\n\n      else if(face[0].scaledMesh[411] > face[0].scaledMesh[356]){\n        console.log(\"looking left\")\n      }\n    }catch{\n      console.log('checked blind spot')\n    }\n\n      // Get canvas context\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawMesh(face, ctx);\n    }\n  };\n\n  runFacemesh();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      \n\n        <Webcam\n          ref={webcamRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n      </header>\n\n      <Unity unityContext={unityContext} />\n    \n          \n    </div>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}
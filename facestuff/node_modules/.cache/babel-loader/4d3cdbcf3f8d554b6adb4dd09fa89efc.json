{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar UnityLoaderService =\n/** @class */\nfunction () {\n  function UnityLoaderService() {\n    /**\n     * A reference to the document head.\n     * @type {HTMLHeadElement}\n     */\n    this.documentHead = document.querySelector(\"head\");\n  }\n  /**\n   * Appends the Unity loader script to the window. When a version of the loader\n   * is already appended, we'll skip right away. When another loader is try to\n   * append, the previous will be removed first.\n   * @param {string} url the path to the Unity loader file\n   * @param {Function} onLoad when the script is loaded\n   * @returns A promise when resolving when the file is loaded.\n   */\n\n\n  UnityLoaderService.prototype.load = function (url) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      if (typeof _this.unityLoaderScript !== \"undefined\") if (url === _this.unityLoaderScript.src) {\n        return resolve();\n      } else {\n        _this.unityLoaderScript.remove();\n      }\n      _this.unityLoaderScript = document.createElement(\"script\");\n      _this.unityLoaderScript.type = \"text/javascript\";\n      _this.unityLoaderScript.async = true;\n      _this.unityLoaderScript.src = url;\n\n      _this.unityLoaderScript.onload = function () {\n        return resolve();\n      };\n\n      _this.unityLoaderScript.onerror = function () {\n        return reject(\"Unable to load \" + url);\n      };\n\n      _this.documentHead.appendChild(_this.unityLoaderScript);\n    });\n  };\n\n  return UnityLoaderService;\n}();\n\nexports.default = UnityLoaderService;","map":{"version":3,"sources":["../../source/services/unityLoaderService.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,kBAAA;AAAA;AAAA,YAAA;AAAA,WAAA,kBAAA,GAAA;AACE;;;AAGG;AACK,SAAA,YAAA,GAAgC,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAhC;AAiCT;AAzBC;;;;;;;AAOG;;;AACI,EAAA,kBAAA,CAAA,SAAA,CAAA,IAAA,GAAP,UAAY,GAAZ,EAAuB;AAAvB,QAAA,KAAA,GAAA,IAAA;;AACE,WAAO,IAAI,OAAJ,CAAkB,UAAC,OAAD,EAAU,MAAV,EAAgB;AACvC,UAAI,OAAO,KAAI,CAAC,iBAAZ,KAAkC,WAAtC,EACE,IAAI,GAAG,KAAK,KAAI,CAAC,iBAAL,CAAuB,GAAnC,EAAwC;AACtC,eAAO,OAAO,EAAd;AACD,OAFD,MAEO;AACL,QAAA,KAAI,CAAC,iBAAL,CAAuB,MAAvB;AACD;AACH,MAAA,KAAI,CAAC,iBAAL,GAAyB,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAzB;AACA,MAAA,KAAI,CAAC,iBAAL,CAAuB,IAAvB,GAA8B,iBAA9B;AACA,MAAA,KAAI,CAAC,iBAAL,CAAuB,KAAvB,GAA+B,IAA/B;AACA,MAAA,KAAI,CAAC,iBAAL,CAAuB,GAAvB,GAA6B,GAA7B;;AACA,MAAA,KAAI,CAAC,iBAAL,CAAuB,MAAvB,GAAgC,YAAA;AAAM,eAAA,OAAA,EAAA;AAAS,OAA/C;;AACA,MAAA,KAAI,CAAC,iBAAL,CAAuB,OAAvB,GAAiC,YAAA;AAAM,eAAA,MAAM,CAAC,oBAAP,GAAM,CAAN;AAA+B,OAAtE;;AACA,MAAA,KAAI,CAAC,YAAL,CAAkB,WAAlB,CAA8B,KAAI,CAAC,iBAAnC;AACD,KAdM,CAAP;AAeD,GAhBM;;AAiBT,SAAA,kBAAA;AAAC,CAtCD,EAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar UnityLoaderService = /** @class */ (function () {\n    function UnityLoaderService() {\n        /**\n         * A reference to the document head.\n         * @type {HTMLHeadElement}\n         */\n        this.documentHead = document.querySelector(\"head\");\n    }\n    /**\n     * Appends the Unity loader script to the window. When a version of the loader\n     * is already appended, we'll skip right away. When another loader is try to\n     * append, the previous will be removed first.\n     * @param {string} url the path to the Unity loader file\n     * @param {Function} onLoad when the script is loaded\n     * @returns A promise when resolving when the file is loaded.\n     */\n    UnityLoaderService.prototype.load = function (url) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (typeof _this.unityLoaderScript !== \"undefined\")\n                if (url === _this.unityLoaderScript.src) {\n                    return resolve();\n                }\n                else {\n                    _this.unityLoaderScript.remove();\n                }\n            _this.unityLoaderScript = document.createElement(\"script\");\n            _this.unityLoaderScript.type = \"text/javascript\";\n            _this.unityLoaderScript.async = true;\n            _this.unityLoaderScript.src = url;\n            _this.unityLoaderScript.onload = function () { return resolve(); };\n            _this.unityLoaderScript.onerror = function () { return reject(\"Unable to load \" + url); };\n            _this.documentHead.appendChild(_this.unityLoaderScript);\n        });\n    };\n    return UnityLoaderService;\n}());\nexports.default = UnityLoaderService;\n//# sourceMappingURL=unityLoaderService.js.map"]},"metadata":{},"sourceType":"script"}
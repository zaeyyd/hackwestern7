{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPoolBackprop } from '@tensorflow/tfjs-core';\nimport { MaxPool2DBackpropProgram } from '../max_pool_backprop_gpu';\nimport { Pool2DProgram } from '../pool_gpu';\nimport { assertNotComplex } from '../webgl_util';\nexport function maxPoolBackprop(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    dy,\n    input,\n    output\n  } = inputs;\n  const x = input;\n  assertNotComplex([input, output], 'maxPoolBackprop');\n  const {\n    filterSize,\n    strides,\n    pad,\n    dimRoundingMode\n  } = attrs;\n  const convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, 1\n  /* dilations */\n  , pad, dimRoundingMode);\n  const getPositions = true;\n  const maxPoolPositionsProgram = new Pool2DProgram(convInfo, 'max', getPositions);\n  const maxPoolPositions = backend.runWebGLProgram(maxPoolPositionsProgram, [x], x.dtype);\n  const maxPoolBackPropProgram = new MaxPool2DBackpropProgram(convInfo);\n  const result = backend.runWebGLProgram(maxPoolBackPropProgram, [dy, maxPoolPositions], x.dtype);\n  backend.disposeIntermediateTensorInfo(maxPoolPositions);\n  return result;\n}\nexport const maxPoolBackpropConfig = {\n  kernelName: MaxPoolBackprop,\n  backendName: 'webgl',\n  kernelFunc: maxPoolBackprop\n};","map":{"version":3,"sources":["../../src/kernels/MaxPoolBackprop.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AACH,SAAQ,YAAR,EAAgD,eAAhD,QAA+H,uBAA/H;AAGA,SAAQ,wBAAR,QAAuC,0BAAvC;AACA,SAAQ,aAAR,QAA4B,aAA5B;AACA,SAAQ,gBAAR,QAA+B,eAA/B;AAEA,OAAM,SAAU,eAAV,CAA0B,IAA1B,EAIL;AACC,QAAM;AAAC,IAAA,MAAD;AAAS,IAAA,OAAT;AAAkB,IAAA;AAAlB,MAA2B,IAAjC;AACA,QAAM;AAAC,IAAA,EAAD;AAAK,IAAA,KAAL;AAAY,IAAA;AAAZ,MAAsB,MAA5B;AACA,QAAM,CAAC,GAAG,KAAV;AACA,EAAA,gBAAgB,CAAC,CAAC,KAAD,EAAQ,MAAR,CAAD,EAAkB,iBAAlB,CAAhB;AACA,QAAM;AAAC,IAAA,UAAD;AAAa,IAAA,OAAb;AAAsB,IAAA,GAAtB;AAA2B,IAAA;AAA3B,MAA8C,KAApD;AAEA,QAAM,QAAQ,GAAG,YAAY,CAAC,iBAAb,CACb,CAAC,CAAC,KADW,EACgC,UADhC,EAC4C,OAD5C,EAEb;AAAE;AAFW,IAEM,GAFN,EAEW,eAFX,CAAjB;AAGA,QAAM,YAAY,GAAG,IAArB;AACA,QAAM,uBAAuB,GACzB,IAAI,aAAJ,CAAkB,QAAlB,EAA4B,KAA5B,EAAmC,YAAnC,CADJ;AAEA,QAAM,gBAAgB,GAClB,OAAO,CAAC,eAAR,CAAwB,uBAAxB,EAAiD,CAAC,CAAD,CAAjD,EAAsD,CAAC,CAAC,KAAxD,CADJ;AAGA,QAAM,sBAAsB,GAAG,IAAI,wBAAJ,CAA6B,QAA7B,CAA/B;AACA,QAAM,MAAM,GAAG,OAAO,CAAC,eAAR,CACX,sBADW,EACa,CAAC,EAAD,EAAK,gBAAL,CADb,EACqC,CAAC,CAAC,KADvC,CAAf;AAEA,EAAA,OAAO,CAAC,6BAAR,CAAsC,gBAAtC;AACA,SAAO,MAAP;AACD;AAED,OAAO,MAAM,qBAAqB,GAAiB;AACjD,EAAA,UAAU,EAAE,eADqC;AAEjD,EAAA,WAAW,EAAE,OAFoC;AAGjD,EAAA,UAAU,EAAE;AAHqC,CAA5C","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPoolBackprop } from '@tensorflow/tfjs-core';\nimport { MaxPool2DBackpropProgram } from '../max_pool_backprop_gpu';\nimport { Pool2DProgram } from '../pool_gpu';\nimport { assertNotComplex } from '../webgl_util';\nexport function maxPoolBackprop(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, input, output } = inputs;\n    const x = input;\n    assertNotComplex([input, output], 'maxPoolBackprop');\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n    const getPositions = true;\n    const maxPoolPositionsProgram = new Pool2DProgram(convInfo, 'max', getPositions);\n    const maxPoolPositions = backend.runWebGLProgram(maxPoolPositionsProgram, [x], x.dtype);\n    const maxPoolBackPropProgram = new MaxPool2DBackpropProgram(convInfo);\n    const result = backend.runWebGLProgram(maxPoolBackPropProgram, [dy, maxPoolPositions], x.dtype);\n    backend.disposeIntermediateTensorInfo(maxPoolPositions);\n    return result;\n}\nexport const maxPoolBackpropConfig = {\n    kernelName: MaxPoolBackprop,\n    backendName: 'webgl',\n    kernelFunc: maxPoolBackprop\n};\n//# sourceMappingURL=MaxPoolBackprop.js.map"]},"metadata":{},"sourceType":"module"}